{
  "name": "grunt-mocha-test",
  "description": "A grunt task for running server side mocha tests",
  "version": "0.5.0",
  "homepage": "https://github.com/pghalliday/grunt-mocha-test",
  "author": {
    "name": "Peter Halliday",
    "email": "pghalliday@gmail.com",
    "url": "http://stuffpetedoes.blogspot.nl/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pghalliday/grunt-mocha-test.git"
  },
  "bugs": {
    "url": "https://github.com/pghalliday/grunt-mocha-test/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/pghalliday/grunt-mocha-test/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "bin": {
    "grunt-mocha-test": "bin/grunt-mocha-test"
  },
  "engines": {
    "node": ">= 0.10.4"
  },
  "scripts": {
    "test": "grunt",
    "travis-cov": {
      "threshold": 100
    }
  },
  "dependencies": {
    "mocha": "~1.11.0"
  },
  "devDependencies": {
    "grunt-cli": "~0.1.8",
    "grunt": "~0.4.1",
    "chai": "~1.7.0",
    "grunt-contrib-jshint": "~0.5.4",
    "grunt-blanket": "~0.0.8",
    "grunt-contrib-copy": "~0.4.1",
    "grunt-contrib-clean": "~0.4.1",
    "travis-cov": "~0.2.4"
  },
  "keywords": [
    "gruntplugin",
    "mocha",
    "test"
  ],
  "readme": "# grunt-mocha-test\r\n\r\n[![Build Status](https://travis-ci.org/pghalliday/grunt-mocha-test.png)](https://travis-ci.org/pghalliday/grunt-mocha-test)\r\n[![Dependency Status](https://gemnasium.com/pghalliday/grunt-mocha-test.png)](https://gemnasium.com/pghalliday/grunt-mocha-test)\r\n\r\nA grunt task for running server side mocha tests\r\n\r\n## Usage\r\n\r\nInstall next to your project's Gruntfile.js with: \r\n\r\n```\r\n$ npm install grunt-mocha-test\r\n```\r\n\r\n### Running tests\r\n\r\nHere is a simple example gruntfile if you just want to run tests\r\n\r\n```javascript\r\nmodule.exports = function(grunt) {\r\n\r\n  // Add the grunt-mocha-test tasks.\r\n  grunt.loadNpmTasks('grunt-mocha-test');\r\n\r\n  grunt.initConfig({\r\n    // Configure a mochaTest task\r\n    mochaTest: {\r\n      test: {\r\n        options: {\r\n          reporter: 'spec'\r\n        },\r\n        src: ['test/**/*.js']\r\n      }\r\n    }\r\n  });\r\n\r\n  grunt.registerTask('default', 'mochaTest');\r\n\r\n};\r\n```\r\n\r\nThe following mocha options are supported\r\n\r\n- grep\r\n- ui\r\n- reporter\r\n- timeout\r\n- invert\r\n- ignoreLeaks\r\n- growl\r\n- globals\r\n- require\r\n\r\n### Generating coverage reports\r\n\r\nHere is an example gruntfile that registers 2 test tasks, 1 to run the tests and 1 to generate a coverage report using `blanket.js` to instrument the javascript on the fly.\r\n\r\n```\r\n$ npm install blanket\r\n```\r\n\r\n```javascript\r\nmodule.exports = function(grunt) {\r\n\r\n  grunt.loadNpmTasks('grunt-mocha-test');\r\n\r\n  grunt.initConfig({\r\n    mochaTest: {\r\n      test: {\r\n        options: {\r\n          reporter: 'spec',\r\n          // Require blanket wrapper here to instrument other required\r\n          // files on the fly. \r\n          //\r\n          // NB. We cannot require blanket directly as it\r\n          // detects that we are not running mocha cli and loads differently.\r\n          //\r\n          // NNB. As mocha is 'clever' enough to only run the tests once for\r\n          // each file the following coverage task does not actually run any\r\n          // tests which is why the coverage instrumentation has to be done here\r\n          require: 'coverage/blanket'\r\n        },\r\n        src: ['test/**/*.js']\r\n      },\r\n      coverage: {\r\n        options: {\r\n          reporter: 'html-cov',\r\n          // use the quiet flag to suppress the mocha console output\r\n          quiet: true\r\n        },\r\n        src: ['test/**/*.js'],\r\n        // specify a destination file to capture the mocha\r\n        // output (the quiet option does not suppress this)\r\n        dest: 'coverage.html'\r\n      }\r\n    }\r\n  });\r\n\r\n  grunt.registerTask('default', 'mochaTest');\r\n};\r\n```\r\n\r\nAs noted above it is necessary to wrap the blanket require when calling mocha programatically so `coverage/blanket.js` should look something like this.\r\n\r\n```javascript\r\nrequire('blanket')({\r\n  // Only files that match the pattern will be instrumented\r\n  pattern: '/src/'\r\n});\r\n```\r\n\r\n### Failing tests if a coverage threshold is not reached\r\n\r\nBuilding on the previous example, if you wish to have your tests fail if it falls below a certain coverage threshold then I advise using the `travis-cov` reporter\r\n\r\n```\r\n$ npm install travis-cov\r\n```\r\n\r\n```javascript\r\nmodule.exports = function(grunt) {\r\n\r\n  grunt.loadNpmTasks('grunt-mocha-test');\r\n\r\n  grunt.initConfig({\r\n    mochaTest: {\r\n      test: {\r\n        options: {\r\n          reporter: 'spec',\r\n          require: 'coverage/blanket'\r\n        },\r\n        src: ['test/**/*.js']\r\n      },\r\n      'html-cov': {\r\n        options: {\r\n          reporter: 'html-cov',\r\n          quiet: true\r\n        },\r\n        src: ['test/**/*.js'],\r\n        dest: 'coverage.html'\r\n      },\r\n      // The travis-cov reporter will fail the tests if the\r\n      // coverage falls below the threshold configured in package.json\r\n      'travis-cov': {\r\n        options: {\r\n          reporter: 'travis-cov'\r\n        },\r\n        src: ['test/**/*.js']\r\n      }\r\n    }\r\n  });\r\n\r\n  grunt.registerTask('default', 'mochaTest');\r\n};\r\n```\r\n\r\nDon't forget to update `package.json` with options for `travis-cov`, for example:\r\n\r\n```javascript\r\n  ...\r\n\r\n  \"scripts\": {\r\n    \"test\": \"grunt\",\r\n    \"travis-cov\": {\r\n      // Yes, I like to set the coverage threshold to 100% ;)\r\n      \"threshold\": 100\r\n    }\r\n  },\r\n\r\n  ...\r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using: \r\n\r\n```\r\n$ npm test\r\n```\r\n\r\n### Using Vagrant\r\nTo use the Vagrantfile you will also need to install the following vagrant plugins\r\n\r\n```\r\n$ vagrant plugin install vagrant-omnibus\r\n$ vagrant plugin install vagrant-berkshelf\r\n```\r\n\r\n\r\n## License\r\nCopyright &copy; 2013 Peter Halliday  \r\nLicensed under the MIT license.\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-mocha-test@0.5.0",
  "_from": "grunt-mocha-test@~0.5.0"
}
